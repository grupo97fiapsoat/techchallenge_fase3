# Migration Init Container
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS migration

# Install SQL Server tools
RUN apt-get update && \
    apt-get install -y curl gnupg2 && \
    curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \
    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18 unixodbc-dev && \
    echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy solution and project files
COPY ["FastFood.sln", "./"]
COPY ["src/FastFood.Api/FastFood.Api.csproj", "src/FastFood.Api/"]
COPY ["src/FastFood.Application/FastFood.Application.csproj", "src/FastFood.Application/"]
COPY ["src/FastFood.Domain/FastFood.Domain.csproj", "src/FastFood.Domain/"]
COPY ["src/FastFood.Infrastructure/FastFood.Infrastructure.csproj", "src/FastFood.Infrastructure/"]

# Restore dependencies
RUN dotnet restore "FastFood.sln" --runtime linux-x64 --no-cache

# Copy remaining source code
COPY src/ ./src/

# Ensure appsettings.Development.json exists and is valid
RUN echo '{ \
  "ConnectionStrings": { \
    "DefaultConnection": "Server=db;Database=FastFood;User Id=sa;Password=FastFood2025;TrustServerCertificate=true;MultipleActiveResultSets=true" \
  }, \
  "Logging": { \
    "LogLevel": { \
      "Default": "Information", \
      "Microsoft": "Warning", \
      "Microsoft.Hosting.Lifetime": "Information" \
    } \
  } \
}' > /app/src/FastFood.Api/appsettings.Development.json

# Install EF Core global tool
RUN dotnet tool install --global dotnet-ef

# Ensure global tools and SQL Server tools are in PATH
ENV PATH="${PATH}:/root/.dotnet/tools:/opt/mssql-tools18/bin"

# Set working directory to the API project
WORKDIR /app/src/FastFood.Api

# Build the project
RUN dotnet build -c Release --no-restore

# Create a simple migration script
RUN echo '#!/bin/bash' > /app/run-migrations.sh && \
    echo 'set -e' >> /app/run-migrations.sh && \
    echo 'echo "[MIGRATION] Iniciando processo de migração..."' >> /app/run-migrations.sh && \
    echo 'echo "[MIGRATION] Verificando SQL Server..."' >> /app/run-migrations.sh && \
    echo 'export ConnectionStrings__DefaultConnection="Server=db;Database=FastFood;User Id=sa;Password=FastFood2025;TrustServerCertificate=true;MultipleActiveResultSets=true;"' >> /app/run-migrations.sh && \
    echo 'cd /app/src/FastFood.Api' >> /app/run-migrations.sh && \
    echo 'echo "[MIGRATION] Aplicando migrações..."' >> /app/run-migrations.sh && \
    echo 'dotnet ef database update --verbose' >> /app/run-migrations.sh && \
    echo 'echo "[MIGRATION] Migrações aplicadas com sucesso!"' >> /app/run-migrations.sh && \
    chmod +x /app/run-migrations.sh

# Set the entrypoint to run migrations
ENTRYPOINT ["/bin/bash", "/app/run-migrations.sh"]
