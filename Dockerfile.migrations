# Migration Init Container
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS migration
WORKDIR /src

# Copy project files and restore dependencies
COPY ["src/FastFood.Api/FastFood.Api.csproj", "src/FastFood.Api/"]
COPY ["src/FastFood.Application/FastFood.Application.csproj", "src/FastFood.Application/"]
COPY ["src/FastFood.Domain/FastFood.Domain.csproj", "src/FastFood.Domain/"]
COPY ["src/FastFood.Infrastructure/FastFood.Infrastructure.csproj", "src/FastFood.Infrastructure/"]

RUN dotnet restore "src/FastFood.Api/FastFood.Api.csproj"

# Copy source code
COPY src/ src/

# Install EF Core global tool
RUN dotnet tool install --global dotnet-ef

# Ensure global tools are in PATH
ENV PATH="${PATH}:/root/.dotnet/tools"

# Set working directory for migrations
WORKDIR /src/FastFood.Api

# Create script to run migrations
RUN echo '#!/bin/bash\n\
set -e\n\
echo "[MIGRATION] Waiting for SQL Server..."\n\
for i in {1..60}; do\n\
  if dotnet ef database can-connect --project ../FastFood.Infrastructure --startup-project . > /dev/null 2>&1; then\n\
    echo "[OK] SQL Server is ready!"\n\
    break\n\
  fi\n\
  if [ $i -eq 60 ]; then\n\
    echo "[ERROR] Timeout waiting for SQL Server"\n\
    exit 1\n\
  fi\n\
  echo -n "."\n\
  sleep 1\n\
done\n\
\n\
echo "[MIGRATION] Checking for existing migrations..."\n\
if [ ! -d "../FastFood.Infrastructure/Migrations" ] || [ -z "$(ls -A ../FastFood.Infrastructure/Migrations/ 2>/dev/null)" ]; then\n\
  echo "[MIGRATION] Creating initial migration..."\n\
  dotnet ef migrations add InitialCreate --project ../FastFood.Infrastructure --startup-project . --output-dir Migrations\n\
fi\n\
\n\
echo "[MIGRATION] Applying migrations..."\n\
dotnet ef database update --project ../FastFood.Infrastructure --startup-project .\n\
echo "[SUCCESS] Database migration completed!"' > /migrate.sh && chmod +x /migrate.sh

ENTRYPOINT ["/migrate.sh"]
