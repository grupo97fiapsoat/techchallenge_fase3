version: '3.8'

services:
  # SQL Server Database
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD:-FastFood2025}
      - MSSQL_PID=Express
    ports:
      - "1434:1433" # Externo:Interno
    volumes:
      - fastfood-data:/var/opt/mssql
    networks:
      - fastfood-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${DB_PASSWORD:-FastFood2025}", "-Q", "SELECT 1", "-C", "-N"]
      interval: 10s
      retries: 10
      timeout: 5s
      start_period: 30s

  # Database Migrations  
  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    environment:
      - DB_PASSWORD=${DB_PASSWORD:-FastFood2025}
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=FastFood;User Id=sa;Password=${DB_PASSWORD:-FastFood2025};TrustServerCertificate=true;MultipleActiveResultSets=true
    networks:
      - fastfood-network
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  # FastFood API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/fastfood-dev.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD:-fastfood123}
      - ConnectionStrings__DefaultConnection=Server=db;Database=FastFood;User Id=sa;Password=${DB_PASSWORD:-FastFood2025};TrustServerCertificate=true;MultipleActiveResultSets=true
    volumes:
      - ./certs:/app/certs:ro
    networks:
      - fastfood-network
    depends_on:
      - migrations
    restart: unless-stopped

networks:
  fastfood-network:
    driver: bridge

volumes:
  fastfood-data:
