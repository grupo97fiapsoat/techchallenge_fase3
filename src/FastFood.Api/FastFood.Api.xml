<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FastFood.Api</name>
    </assembly>
    <members>
        <member name="M:FastFood.Api.Controllers.CustomersController.Create(FastFood.Application.DTOs.CreateCustomerDto)">
            <summary>
            Cria um novo cliente
            </summary>
            <param name="request">Dados do cliente</param>
            <returns>Cliente criado</returns>
            <response code="201">Cliente criado com sucesso</response>
            <response code="400">Dados inválidos</response>
        </member>
        <member name="M:FastFood.Api.Controllers.CustomersController.GetByCpf(System.String)">
            <summary>
            Busca um cliente pelo CPF
            </summary>
            <param name="cpf">CPF do cliente</param>
            <returns>Cliente encontrado</returns>
            <response code="200">Cliente encontrado</response>
            <response code="404">Cliente não encontrado</response>
        </member>
        <member name="M:FastFood.Api.Controllers.OrdersController.Create(FastFood.Application.DTOs.CreateOrderDto)">
            <summary>
            Cria um novo pedido
            </summary>
            <param name="request">Dados do pedido</param>
            <returns>Pedido criado</returns>
            <response code="201">Pedido criado com sucesso</response>
            <response code="400">Dados inválidos</response>
        </member>
        <member name="M:FastFood.Api.Controllers.OrdersController.GetAll(System.Nullable{System.Guid},System.String,System.Int32,System.Int32)">
            <summary>
            Obtém todos os pedidos com opções de filtragem e paginação
            </summary>
            <param name="customerId">ID do cliente (opcional)</param>
            <param name="status">Status do pedido (opcional)</param>
            <param name="pageNumber">Número da página (padrão: 1)</param>
            <param name="pageSize">Tamanho da página (padrão: 10)</param>
            <returns>Lista de pedidos paginada</returns>
            <response code="200">Lista de pedidos</response>
        </member>
        <member name="M:FastFood.Api.Controllers.OrdersController.GetById(System.Guid)">
            <summary>
            Obtém um pedido pelo ID
            </summary>
            <param name="id">ID do pedido</param>
            <returns>Detalhes do pedido</returns>
            <response code="200">Pedido encontrado</response>
            <response code="404">Pedido não encontrado</response>
        </member>
        <member name="M:FastFood.Api.Controllers.OrdersController.UpdateStatus(System.Guid,FastFood.Application.DTOs.UpdateOrderStatusDto)">
            <summary>
            Atualiza o status de um pedido
            </summary>
            <param name="id">ID do pedido</param>
            <param name="request">Novo status</param>
            <returns>Resultado da operação</returns>
            <response code="200">Status atualizado com sucesso</response>
            <response code="400">Dados inválidos</response>
            <response code="404">Pedido não encontrado</response>
        </member>
        <member name="M:FastFood.Api.Controllers.OrdersController.ProcessCheckout(System.Guid)">
            <summary>
            Processa o pagamento de um pedido
            </summary>
            <param name="id">ID do pedido</param>
            <returns>Detalhes do processamento do pagamento</returns>
            <response code="200">Pagamento processado com sucesso</response>
            <response code="400">Dados inválidos ou erro no processamento</response>
            <response code="404">Pedido não encontrado</response>
        </member>
        <member name="M:FastFood.Api.Controllers.ProductsController.Create(FastFood.Application.DTOs.CreateProductDto)">
            <summary>
            Cria um novo produto no catálogo
            </summary>
            <param name="createProductDto">Dados do produto a ser criado</param>
            <returns>Produto criado com seus detalhes</returns>
            <response code="201">Produto criado com sucesso</response>
            <response code="400">Dados inválidos do produto</response>
        </member>
        <member name="M:FastFood.Api.Controllers.ProductsController.Update(System.Guid,FastFood.Application.DTOs.UpdateProductDto)">
            <summary>
            Atualiza as informações de um produto existente
            </summary>
            <param name="id">ID do produto a ser atualizado</param>
            <param name="updateProductDto">Novos dados do produto</param>
            <returns>Produto atualizado com seus detalhes</returns>
            <response code="200">Produto atualizado com sucesso</response>
            <response code="400">Dados inválidos do produto</response>
            <response code="404">Produto não encontrado</response>
        </member>
        <member name="M:FastFood.Api.Controllers.ProductsController.Delete(System.Guid)">
            <summary>
            Exclui um produto do catálogo
            </summary>
            <param name="id">ID do produto a ser excluído</param>
            <returns>Nenhum conteúdo em caso de sucesso</returns>
            <response code="204">Produto excluído com sucesso</response>
            <response code="404">Produto não encontrado</response>
        </member>
        <member name="M:FastFood.Api.Controllers.ProductsController.GetById(System.Guid)">
            <summary>
            Busca um produto específico pelo seu ID
            </summary>
            <param name="id">ID do produto a ser buscado</param>
            <returns>Detalhes do produto encontrado</returns>
            <response code="200">Produto encontrado</response>
            <response code="404">Produto não encontrado</response>
            <response code="501">Método não implementado</response>
        </member>
        <member name="M:FastFood.Api.Controllers.ProductsController.GetByCategory(System.String,System.Int32,System.Int32)">
            <summary>
            Busca produtos por categoria com suporte a paginação
            </summary>
            <param name="category">Categoria dos produtos (ex: Lanche, Bebida, Sobremesa)</param>
            <param name="pageSize">Número de itens por página (padrão: 10)</param>
            <param name="pageNumber">Número da página (padrão: 1)</param>
            <returns>Lista paginada de produtos da categoria especificada</returns>
            <response code="200">Lista de produtos encontrada</response>
            <response code="400">Categoria inválida</response>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.ProcessCheckoutDtoExample">
            <summary>
            Exemplo de request para checkout
            </summary>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.CheckoutResponseDtoExample">
            <summary>
            Exemplo de response para checkout
            </summary>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.CreateCustomerDtoExample">
            <summary>
            Exemplo de request para criação de cliente
            </summary>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.CustomerDtoExample">
            <summary>
            Exemplo de response para cliente
            </summary>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.CreateOrderDtoExample">
            <summary>
            Exemplo de request para criação de pedido
            </summary>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.OrderDtoExample">
            <summary>
            Exemplo de response para pedido
            </summary>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.CreateProductDtoExample">
            <summary>
            Exemplo de request para criação de produto
            </summary>
        </member>
        <member name="T:FastFood.Api.Examples.Swagger.ProductDtoExample">
            <summary>
            Exemplo de response para produto
            </summary>
        </member>
        <member name="T:FastFood.Api.Extensions.SwaggerExtensions">
            <summary>
            Extensões para configuração do Swagger/OpenAPI
            </summary>
        </member>
        <member name="M:FastFood.Api.Extensions.SwaggerExtensions.AddOpenApi(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configura o Swagger/OpenAPI com documentação XML e outras configurações
            </summary>
        </member>
        <member name="T:FastFood.Api.Models.ErrorResponse">
            <summary>
            Modelo de resposta para erros na API.
            </summary>
        </member>
        <member name="P:FastFood.Api.Models.ErrorResponse.Errors">
            <summary>
            Lista de mensagens de erro.
            </summary>
        </member>
        <member name="P:FastFood.Api.Models.ErrorResponse.TraceId">
            <summary>
            Identificador de rastreamento da requisição.
            </summary>
        </member>
    </members>
</doc>
